/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.10).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package ch.heigvd.amt.p2.endpoints.api;


import ch.heigvd.amt.p2.endpoints.model.Credentials;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import javax.validation.Valid;
import java.security.Principal;

@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2020-01-01T15:06:39.162Z")

@Api(value = "auth", description = "the auth API")
public interface AuthApi {

    @ApiOperation(value = "Se connecter à la plateforme", nickname = "loginUser", notes = "Se connecter à la plateforme en fournissant les identifiants", response = String.class, tags={ "auth", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "token", response = String.class),
        @ApiResponse(code = 400, message = "email ou mot de passe invalide") })
    @RequestMapping(value = "/auth/login",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<String> login(@ApiParam(value = "Les identifiants de l'utilisateur" ,required=true )  @Valid @RequestBody Credentials credentials);


    @ApiOperation(value = "Se déconnecter de la plateforme", nickname = "logoutUser", notes = "Se déconnecter de la plateforme", response = String.class, tags={ "auth", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Opération réussie", response = String.class) })
    @RequestMapping(value = "/auth/logout",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<String> logout(@ApiParam(value = "Contient le token d'authentification sous la forme `Bearer {token}`" ,required=true) @RequestHeader(value="Authorization", required=true) String authorization, Principal principal);

}
