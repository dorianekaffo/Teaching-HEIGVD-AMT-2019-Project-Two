# Docker compose file
version: '3.7'
services:
    traefik:
        image: 'traefik:v2.0.0-rc3'
        command:
            - '--api.insecure=true'
            - '--providers.docker=true'
            - '--providers.docker.exposedbydefault=false'
            - '--entrypoints.web.address=:80'
        ports:
            - '90:80'
            - '8090:8080'
        volumes:
            - '/var/run/docker.sock:/var/run/docker.sock:ro'
    first_backend_db:
        image: 'mysql:latest'
        restart: always
        command: '--default-authentication-plugin=mysql_native_password'
        volumes:
            - '~/heig-vd/first_backend_db:/var/lib/mysql'
        environment:
            - MYSQL_ROOT_PASSWORD=simplepwd
            - MYSQL_DATABASE=first_backend
        ports:
            - '3100:3306'
    first_backend:
        build: ../../first-backend
        expose:
            - 8080
        labels:
            - traefik.enable=true
            - traefik.http.routers.first_backend.rule=PathPrefix(`/`)
        volumes:
            - '~/heig-vd/first_backend/files:/tmp/fichiers'
        depends_on:
            - first_backend_db
        links:
            - 'first_backend_db:first_backend_db'

    second_backend_db:
        image: 'mysql:latest'
        restart: always
        command: '--default-authentication-plugin=mysql_native_password'
        volumes:
            - '~/heig-vd/second_backend_db:/var/lib/mysql'
        environment:
            - MYSQL_ROOT_PASSWORD=simplepwd
            - MYSQL_DATABASE=second_backend
        ports:
            - '3200:3306'
    second_backend:
        build: ../../second-backend
        expose:
            - 8080
        labels:
            - traefik.enable=true
            - traefik.http.routers.secondbackend.rule=PathPrefix(`/`)
        volumes:
            - '~/heig-vd/second_backend:/tmp/fichiers'
        depends_on:
            - second_backend_db
        links:
            - 'second_backend_db:second_backend_db'

