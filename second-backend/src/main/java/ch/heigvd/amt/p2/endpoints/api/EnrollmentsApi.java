/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.10).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package ch.heigvd.amt.p2.endpoints.api;

import java.math.BigDecimal;

import ch.heigvd.amt.p2.model.Enrollment;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.security.access.annotation.Secured;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import javax.validation.Valid;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2020-01-02T04:27:12.447Z")

@Api(value = "enrollments", description = "the enrollments API")
public interface EnrollmentsApi {

    @Secured("hasRole('ADMIN')")
    @ApiOperation(value = "Enrôle un étudiant à un cours", nickname = "createEnrollment", notes = "Enrôle un étudiant à un cours", tags={ "enrollment", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Enrôlement créé") })
    @RequestMapping(value = "/enrollments",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<Enrollment> createEnrollment(@ApiParam(value = "L'enrôlement à créer" ,required=true )  @Valid @RequestBody Enrollment body);


    @ApiOperation(value = "Annule l'enrôlement d'un étudiant à un cous", nickname = "deleteEnrollment", notes = "Annule l'enrôlement d'un étudiant à un cours", tags={ "enrollment", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Enrôlement supprimé") })
    @RequestMapping(value = "/enrollments/{id}",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<String> deleteEnrollment(@ApiParam(value = "Identifiant de l'enrôlement",required=true) @PathVariable("id") Long id);


    @ApiOperation(value = "Récupère l'enrôlement d'un étudiant à un cours", nickname = "getEnrollmentById", notes = "Récupère l'enrôlement d'un étudiant à un cours", response = Enrollment.class, tags={ "enrollment", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Enrôlement réussi", response = Enrollment.class) })
    @RequestMapping(value = "/enrollments/{id}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Enrollment> getEnrollmentById(@ApiParam(value = "Identifiant de l'enrôlement",required=true) @PathVariable("id") Long id);


    @ApiOperation(value = "Recupére tous les enrôlements", nickname = "getEnrollments", notes = "Récupère tous les enrôlements", response = Enrollment.class, responseContainer = "List", tags={ "enrollment", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Toutes les associations entre personne et groupe", response = Enrollment.class, responseContainer = "List") })
    @RequestMapping(value = "/enrollments",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Enrollment>> getEnrollments();

}
