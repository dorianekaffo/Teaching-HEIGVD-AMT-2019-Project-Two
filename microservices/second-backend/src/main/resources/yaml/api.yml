swagger: "2.0"
info:
  description: "Ce serveur a été construit dans le cadre du deuxième projet de l'AMT 2019. Ceci regroupe les API du deuxième backend du projet."
  version: "1.0.0"
  title: "AMT 2019 - Project Two API - Deuxième backend"
  termsOfService: ""
host: "localhost:8080"
basePath: "/"
tags:
- name: "student"
  description: "Les étudiants"
- name: "course"
  description: "Les cours"
- name: "enrollment"
  description: "Les enrôlements d'étudiants aux cours"
schemes:
- "http"
paths:
  /students:
    post:
      tags:
      - "student"
      summary: "Créer un étudiant"
      description: "Créer un étudiant"
      operationId: "createStudent"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "L'étudiant à créer"
        required: true
        schema:
          $ref: "#/definitions/Student"
      responses:
        default:
          description: "L'étudiant a été créé"
          schema:
            $ref: "#/definitions/Student"
    get:
      tags:
      - "student"
      summary: "Liste de tous les étudiants"
      description: "Liste complète de tous les étudiants"
      operationId: "getStudents"
      produces:
      - "application/json"
      parameters: []
      responses:
        default:
          description: "Tous les étudiants"
          schema:
            type: array
            items:
              $ref: "#/definitions/Student"
  /students/{id}:
    get:
      tags:
      - "student"
      summary: "Récupère l'étudiant d'identifiant correspondant"
      description: "Retourne l'étudiant avec l'identifiant `id`"
      operationId: "getStudentById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifiant de l'étudiant"
        required: true
        type: "number"
      responses:
        200:
          description: "Etudiant récupéré"
          schema:
            $ref: "#/definitions/Student"
        400:
          description: "Identifiant fourni est invalide"
        404:
          description: "Personne non trouvée"
    put:
      tags:
      - "student"
      summary: "Mets à jour l'étudiant d'identifiant correspondant"
      description: "Mets à jour les attributs de l'étudiant avec pour identifiant `id`"
      operationId: "updateStudent"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifiant de l'étudiant à mettre à jour"
        required: true
        type: "number"
      - in: "body"
        name: "body"
        description: "Etudiant à mettre à jour"
        required: true
        schema:
          $ref: "#/definitions/Student"
      responses:
        400:
          description: "L'identifiant fourni est invalide"
        404:
          description: "L'étudiant est introuvable"
    delete:
      tags:
      - "student"
      summary: "Supprimer un étudiant"
      description: "Supprime l'étudiant d'identifiant `id` correspondant ainsi que tout enrôlement lié"
      operationId: "deleteStudent"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "identifiant de l'étudiant à supprimer"
        required: true
        type: "number"
      responses:
        400:
          description: "L'identifiant fourni est invalide"
        404:
          description: "L'étudiant est introuvable"
  /courses:
    post:
      tags:
      - "course"
      summary: "Crée un cours"
      description: "Crée un nouveau cours"
      operationId: "createCourse"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Cours à créer"
        required: true
        schema:
          $ref: "#/definitions/Course"
      responses:
        default:
          description: "Le cours a été créé"
          schema:
            $ref: "#/definitions/Course"
    get:
      tags:
      - "course"
      summary: "Liste de tous les cours"
      description: "Liste complète de tous les cours"
      operationId: "getCourses"
      produces:
      - "application/json"
      parameters: []
      responses:
        default:
          description: "Tous les cours"
          schema:
            type: array
            items:
              $ref: "#/definitions/Course"
  /courses/{id}:
    get:
      tags:
      - "course"
      summary: "Récupère le cours avec l'identifiant correspondant"
      description: "Récupère le cours d'identifiant `id`"
      operationId: "getCourseById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "L'identifiant du cours"
        required: true
        type: "number"
      responses:
        200:
          description: "Cours récupéré"
          schema:
            $ref: "#/definitions/Course"
        400:
          description: "L'identifiant fourni est invalide"
        404:
          description: "Le cours est introuvable"
    put:
      tags:
      - "course"
      summary: "Mettre à jour un cours"
      description: "Mets à jour les informations sur le cours"
      operationId: "updateCourse"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "identifiant du cours à mettre à jour"
        required: true
        type: "number"
      - in: "body"
        name: "body"
        description: "Le cours à mettre à jour"
        required: true
        schema:
          $ref: "#/definitions/Course"
      responses:
        200:
          description: "Cours mis à jour"
          schema:
            $ref: "#/definitions/Course"
        400:
          description: "L'identifiant fourni est invalide"
        404:
          description: "Le cours est introuvable"
    delete:
      tags:
      - "course"
      summary: "Supprime un cours"
      description: "Supprime un cours ainsi que tout enrôlements lié"
      operationId: "deleteCourse"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "identifiant du cours à supprimer"
        required: true
        type: "number"
      responses:
        400:
          description: "L'identifiant fourni est invalide"
        404:
          description: "Le cours est introuvable"
  /enrollments:
    post:
      tags:
      - "enrollment"
      summary: "Enrôle un étudiant à un cours"
      description: "Enrôle un étudiant à un cours"
      operationId: "createEnrollment"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "L'enrôlement à créer"
        required: true
        schema:
          $ref: "#/definitions/Enrollment"
      responses:
        default:
          description: "Enrôlement créé"
    get:
      tags:
      - "enrollment"
      summary: "Recupére tous les enrôlements"
      description: "Récupère tous les enrôlements"
      operationId: "getEnrollments"
      produces:
      - "application/json"
      parameters: []
      responses:
        default:
          description: "Toutes les associations entre personne et groupe"
          schema:
            type: array
            items:
              $ref: "#/definitions/Student"
  /enrollment/{id}:
    get:
      tags:
      - "enrollment"
      summary: "Récupère l'enrôlement d'un étudiant à un cours"
      description: "Récupère l'enrôlement d'un étudiant à un cours"
      operationId: "getEnrollmentById"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "id"
        description: "Identifiant de l'enrôlement"
        type: "number"
        required: true
      responses:
        default:
          description: "Enrôlement réussi"
          schema:
            $ref: "#/definitions/Enrollment"
    delete:
      tags:
      - "enrollment"
      summary: "Annule l'enrôlement d'un étudiant à un cous"
      description: "Annule l'enrôlement d'un étudiant à un cours"
      operationId: "deleteEnrollment"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "id"
        description: "Identifiant de l'enrôlement"
        type: "number"
        required: true
      responses:
        default:
          description: "Enrôlement supprimé"
definitions:
  Student:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
  Course:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
  Enrollment:
    type: "object"
    properties:
      person:
        $ref: "#/definitions/Student"
      group:
        $ref: "#/definitions/Course"
